<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            text-align: center;
            margin: 50px;
            background-color: #f4f4f4;
        }
        h2 {
            color: #333;
        }
        .otp-form {
            max-width: 400px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .otp-input-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .otp-input {
            width: 40px;
            height: 40px;
            padding: 10px;
            margin: 0 5px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
            text-align: center;
        }
        input[type="submit"] {
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h2>Enter 6-Digit OTP</h2>

    <form class="otp-form">
        <div class="otp-input-container">
            <input type="text" class="otp-input" id="digit1" name="digit1" maxlength="1" required>
            <input type="text" class="otp-input" id="digit2" name="digit2" maxlength="1" required>
            <input type="text" class="otp-input" id="digit3" name="digit3" maxlength="1" required>
            <input type="text" class="otp-input" id="digit4" name="digit4" maxlength="1" required>
            <input type="text" class="otp-input" id="digit5" name="digit5" maxlength="1" required>
            <input type="text" class="otp-input" id="digit6" name="digit6" maxlength="1" required>
        </div>
        <br><br>
        <input type="submit" value="Submit">
    </form>

    <script>
        document.addEventListener('input', function (e) {
            if (e.target.classList.contains('otp-input')) {
                const nextInput = e.target.nextElementSibling;
                if (nextInput && e.target.value !== '') {
                    nextInput.focus();
                }
            }
        });

        document.addEventListener('keydown', function (e) {
            if (e.key === 'Backspace') {
                const currentInput = document.activeElement;

                // Delete the character to the left of the cursor
                const cursorPosition = currentInput.selectionStart;
                if (cursorPosition > 0) {
                    const inputValue = currentInput.value;
                    currentInput.value = inputValue.substring(0, cursorPosition - 1) + inputValue.substring(cursorPosition);
                    currentInput.setSelectionRange(cursorPosition - 1, cursorPosition - 1);
                } else {
                    // Move focus to the previous input box if available and not the first input
                    const previousInput = currentInput.previousElementSibling;
                    if (previousInput && previousInput.tagName === 'INPUT') {
                        previousInput.focus();
                    }
                }
            }
        }); -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            text-align: center;
            margin: 50px;
            background-color: #f4f4f4;
        }
        h2 {
            color: #333;
        }
        .otp-form {
            max-width: 400px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .otp-input-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .otp-input {
            width: 40px;
            height: 40px;
            padding: 10px;
            margin: 0 5px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
            text-align: center;
        }
        input[type="submit"] {
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h2>Enter 6-Digit OTP</h2>

    <form  action="/final" class="otp-form" id="otpForm" method="POST">
        <div class="otp-input-container">
            <% for (let i = 1; i <= 6; i++) { %>
                <input type="text" class="otp-input" id=<%= 'digit' + i %> name=<%= 'digit' + i %> maxlength="1" required>
            <% } %>
        </div>
        <br><br>
        <input type="submit" value="Submit">
    </form>
    <button id="resendCodeButton">Resend Code</button>

    <script>
        document.addEventListener('input', function (e) {
            if (e.target.classList.contains('otp-input')) {
                const nextInput = e.target.nextElementSibling;
                if (nextInput && e.target.value !== '') {
                    nextInput.focus();
                }
            }
        });

        document.addEventListener('keydown', function (e) {
            if (e.key === 'Backspace') {
                const currentInput = document.activeElement;

                // Delete the character to the left of the cursor
                const cursorPosition = currentInput.selectionStart;
                if (cursorPosition > 0) {
                    const inputValue = currentInput.value;
                    currentInput.value = inputValue.substring(0, cursorPosition - 1) + inputValue.substring(cursorPosition);
                    currentInput.setSelectionRange(cursorPosition - 1, cursorPosition - 1);
                } else {
                    // Move focus to the previous input box if available and not the first input
                    const previousInput = currentInput.previousElementSibling;
                    if (previousInput && previousInput.tagName === 'INPUT') {
                        previousInput.focus();
                    }
                }
            }
        });

        // Function to handle the button click event
        function resendCodeButtonClick() {
            // You can add the logic to resend the code here

            // Refresh the page
            location.reload();
        }

        // Attach the function to the button click event
        document.getElementById('resendCodeButton').addEventListener('click', resendCodeButtonClick);
    </script>
</body>
</html>

    </script>
</body>
</html>


